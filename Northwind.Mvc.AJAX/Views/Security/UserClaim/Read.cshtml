@model UserClaimItemModel

@{
    ViewBag.Title = AppHelper.PageTitle(UserClaimResources.EntitySingular, PresentationResources.Read);

    AjaxOptions ajaxOptions = new AjaxOptions()
    {
        HttpMethod = "POST",
        InsertionMode = InsertionMode.Replace,
        OnFailure = "ajaxFailure",
        OnSuccess = "ajaxSuccess",
        UpdateTargetId = "Ajax"
    };
}

<h3>@ViewBag.Title</h3>

@using (Ajax.BeginForm("Read", "UserClaim", ajaxOptions))
{
    @Html.AntiForgeryToken()

    <div id="Partial" class="form-inline">
        @Html.Partial("_UserClaimItem", Model)
    </div>
    
    <div class="z-formButtons">
        @Html.Raw(@Ajax.ImageLink("Button_Cancel", MvcHelper.ReadUrlDictionary(Context, "UserClaim"), "Ajax", "z-buttonCancel", PresentationResources.Cancel))
    </div>
}

<div id="OperationResult"></div>

<script>
    $(function () {
        try
        {
            var model = function () { return @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)); }();
    
            if (model.IsSecurityOperations.IsCreate) {
                $("#Partial").show();
                $("#Button_Cancel").show();
            }
            else {
                $("#Partial").hide();
                $("#Button_Cancel").show();
            }
        } catch (exception) {
            zExceptionMessage("UserClaim Create.cshtml", "function()", exception.message)
        }
    });

    function ajaxFailure(jqXHR, textStatus, errorThrown) {
        try {
            $("#OperationResult").html(zAjaxOperationResult(jqXHR));
        } catch (exception) {
            zExceptionMessage("UserClaim Create.cshtml", "ajaxFailure", exception.message)
        }
    }

    function ajaxSuccess(data, textStatus, jqXHR) {
        try {
            if (data != null) {
                $("#Ajax").load(data.uri);
            }
        } catch (exception) {
            zExceptionMessage("UserClaim Create.cshtml", "ajaxSuccess", exception.message)
        }
    }
</script>